{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["//  функції для HTTP-запитів\n\nimport axios from 'axios';\n\nconst API_KEY = '49361857-acd351382a63090e65700df5d';\nconst BASE_URL = 'https://pixabay.com/api/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getImagesGallery(searchText) {\n  const params = {\n    q: searchText,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  };\n\n  const {\n    data: { total, totalHits, hits },\n  } = await axios(`?key=${API_KEY}`, {\n    params: {\n      ...params,\n    },\n  });\n\n  return { hits, totalHits };\n}\n","// функції для відображення елементів інтерфейсу (додавання, оновлення, очищення елементів галереї; відображення, приховування лоедера).\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst photoList = document.querySelector('.js-gallary');\nconst loader = document.querySelector('.loader');\n\nlet lightbox = new SimpleLightbox('.js-gallary a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport function gallaryMarkUp(pictures = []) {\n  photoList.innerHTML = '';\n\n  const markup = pictures\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `<li class=\"gallery-item\">\n            <a\n              href=\"${largeImageURL}\"\n            >\n              <img\n                src=\"${webformatURL}\"\n                alt=\"${tags}\"\n              />\n            </a>\n            <div class=\"gallery-item-attributes\">\n              <div class=\"attribute\">\n                <p class=\"attribute-title\">Likes</p>\n                <p class=\"attribute-value\">${likes}</p>\n              </div>\n              <div class=\"attribute\">\n                <p class=\"attribute-title\">Views</p>\n                <p class=\"attribute-value\">${views}</p>\n              </div>\n              <div class=\"attribute\">\n                <p class=\"attribute-title\">Comments</p>\n                <p class=\"attribute-value\">${comments}</p>\n              </div>\n              <div class=\"attribute\">\n                <p class=\"attribute-title\">Downloads</p>\n                <p class=\"attribute-value\">${downloads}</p>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>`;\n      }\n    )\n    .join('');\n\n  photoList.insertAdjacentHTML('beforeend', markup);\n\n  lightbox.refresh();\n}\n\n//#region Loader\nexport function showLoader() {\n  loader.classList.remove('hidden');\n}\n\nexport function hideLoader() {\n  loader.classList.add('hidden');\n}\n//#endregion Loader\n","// напиши всю логіку роботи додатка\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Import functions\nimport { getImagesGallery } from './js/pixabay-api';\nimport { gallaryMarkUp } from './js/render-functions';\nimport { showLoader } from './js/render-functions';\nimport { hideLoader } from './js/render-functions';\n\n//#region tacke imput\nconst refs = {\n  form: document.querySelector('.js-search-form'),\n};\n\nconst { form } = refs;\n\nform.addEventListener('submit', onSearchSubmit);\n\nasync function onSearchSubmit(event) {\n  event.preventDefault();\n\n  const form = event.currentTarget;\n  const { searchText } = form.elements;\n\n  showLoader();\n\n  try {\n    const { hits, totalHits } = await getImagesGallery(searchText.value);\n\n    if (!hits || hits.length === 0) {\n      iziToast.error({\n        title: 'Error',\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topCenter',\n      });\n      return;\n    }\n\n    gallaryMarkUp(hits);\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: `Error fetching images: ${error}`,\n      position: 'topCenter',\n    });\n  } finally {\n    hideLoader();\n  }\n\n  searchText.value = '';\n}\n"],"names":["API_KEY","BASE_URL","axios","getImagesGallery","searchText","params","total","totalHits","hits","photoList","loader","lightbox","SimpleLightbox","gallaryMarkUp","pictures","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","showLoader","hideLoader","refs","form","onSearchSubmit","event","iziToast","error"],"mappings":"owBAIA,MAAMA,EAAU,qCACVC,EAAW,2BAEjBC,EAAM,SAAS,QAAUD,EAElB,eAAeE,EAAiBC,EAAY,CACjD,MAAMC,EAAS,CACb,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,EAEK,CACJ,KAAM,CAAE,MAAAE,EAAO,UAAAC,EAAW,KAAAC,CAAM,CACjC,EAAG,MAAMN,EAAM,QAAQF,CAAO,GAAI,CACjC,OAAQ,CACN,GAAGK,CACJ,CACL,CAAG,EAED,MAAO,CAAE,KAAAG,EAAM,UAAAD,CAAW,CAC5B,CCrBA,MAAME,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAS,SAAS,cAAc,SAAS,EAE/C,IAAIC,EAAW,IAAIC,EAAe,gBAAiB,CACjD,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,EAAcC,EAAW,GAAI,CAC3CL,EAAU,UAAY,GAEtB,MAAMM,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,sBAEOL,CAAa;AAAA;AAAA;AAAA,uBAGZD,CAAY;AAAA,uBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAMkBC,CAAK;AAAA;AAAA;AAAA;AAAA,6CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,6CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,6CAIRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,aAOtD,EACK,KAAK,EAAE,EAEVb,EAAU,mBAAmB,YAAaM,CAAM,EAEhDJ,EAAS,QAAS,CACpB,CAGO,SAASY,GAAa,CAC3Bb,EAAO,UAAU,OAAO,QAAQ,CAClC,CAEO,SAASc,GAAa,CAC3Bd,EAAO,UAAU,IAAI,QAAQ,CAC/B,CC9DA,MAAMe,EAAO,CACX,KAAM,SAAS,cAAc,iBAAiB,CAChD,EAEM,CAAE,KAAAC,CAAM,EAAGD,EAEjBC,EAAK,iBAAiB,SAAUC,CAAc,EAE9C,eAAeA,EAAeC,EAAO,CACnCA,EAAM,eAAgB,EAEtB,MAAMF,EAAOE,EAAM,cACb,CAAE,WAAAxB,GAAesB,EAAK,SAE5BH,EAAY,EAEZ,GAAI,CACF,KAAM,CAAE,KAAAf,EAAM,UAAAD,CAAS,EAAK,MAAMJ,EAAiBC,EAAW,KAAK,EAEnE,GAAI,CAACI,GAAQA,EAAK,SAAW,EAAG,CAC9BqB,EAAS,MAAM,CACb,MAAO,QACP,QACE,2EACF,SAAU,WAClB,CAAO,EACD,MACN,CAEIhB,EAAcL,CAAI,CACnB,OAAQsB,EAAO,CACdD,EAAS,MAAM,CACb,MAAO,QACP,QAAS,0BAA0BC,CAAK,GACxC,SAAU,WAChB,CAAK,CACL,QAAY,CACRN,EAAY,CAChB,CAEEpB,EAAW,MAAQ,EACrB"}